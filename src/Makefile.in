#
# Makefile.in for ircd/src
#
# $Id$
#
CC = @CC@
RM = @RM@
MKDEP = ${CC} -MM

IRCDLIBS = @LIBS@ ../zlib/libz.a

INCLUDES = -I../include -I../zlib
CPPFLAGS = ${INCLUDES} @CPPFLAGS@
 
#
# For developers
# CFLAGS= -g -O2 -Wall 
# CPPFLAGS = ${INCLUDES}
#

SRCS = \
	blalloc.c \
	bsd.c \
	channel.c \
	class.c \
	client.c \
	dbuf.c \
	dline_conf.c \
	fdlist.c \
	fileio.c \
	hash.c \
	irc_string.c \
	ircd.c \
	list.c \
	listener.c \
	m_gline.c \
	m_info.c \
	m_kline.c \
	m_unkline.c \
	match.c \
	motd.c \
	mtrie_conf.c \
	packet.c \
	parse.c \
	res.c \
	restart.c \
	s_auth.c \
	s_bsd.c \
	s_conf.c \
	s_debug.c \
	s_err.c \
	s_misc.c \
	s_numeric.c \
	s_serv.c \
	s_user.c \
	s_zip.c \
	scache.c \
	send.c \
        sprintf_irc.c \
	whowas.c

#
# Do it this way for Ultrix, and its portable at least
# just make sure OBJ's match SRC's (pointed out by Ian)
# Ultrix can't use gnu make????? feh --Bleep
# 
#OBJS = \
#	blalloc.o \
#	bsd.o \
#	channel.o \
#	class.o \
#	client.o \
#	dbuf.o \
#	dline_conf.o \
#	fdlist.o \
#	fileio.o \
#	hash.o \
#	irc_string.o \
#	ircd.o \
#	list.o \
#	listener.o \
#	m_gline.o \
#	m_info.o \
#	m_kline.o \
#	m_unkline.o \
#	match.o \
#	motd.o \
#	mtrie_conf.o \
#	packet.o \
#	parse.o \
#	res.o \
#	s_auth.o \
#	s_bsd.o \
#	s_conf.o \
#	s_debug.o \
#	s_err.o \
#	s_misc.o \
#	s_numeric.o \
#       sprintf_irc.o \
#	s_serv.o \
#	s_user.o \
#	s_zip.o \
#	scache.o \
#	send.o \
#	support.o \
#	whowas.o

OBJS = ${SRCS:.c=.o}

all: ircd

build: all

ircd: ${OBJS} version.o
	${CC} ${LDFLAGS} -o $@ ${OBJS} version.o ${IRCDLIBS}
	mv version.c version.c.last

install: build
	@echo "Please do a make install from the top level directory"

version.c: version.c.SH
	/bin/sh ./version.c.SH

# this is really the default rule for c files
.c.o:
	${CC} ${CPPFLAGS} ${CFLAGS} -c $<

.PHONY: depend clean distclean
depend:
	${MKDEP} ${CPPFLAGS} ${SRCS} > .depend

clean:
	${RM} -f ${OBJS} *~ ircd.core core ircd 

distclean: clean
	${RM} -f Makefile version.c.last

include .depend

