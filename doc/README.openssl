Getting OpenSSL to work with hybrid-6
=====================================


PREFACE
=======
  As an administrator, you more than likely are looking at this because
  you wish to enable what are known as "cryptlinks" -- server-to-server
  encryption (via OpenSSL) with RSA key authentication.

  The intention of this document is to make administrators aware of
  what issues can come forth from attempting to use this newfangled
  technology, and how to properly get it "up and going."

  We (the Hybrid team) found the biggest problems with OpenSSL to be
  the following:

    1.  OpenSSL was outdated (version 0.9.5 or below).
    2.  Multiple OpenSSL installations on the same machine.
    3.  Oddities in stock OpenSSL installations.

  In the following sections, we hope to address these issues individually
  so that OpenSSL can be (hopefully) used on all systems where it's
  been made available.


OBTAINING OPENSSL
=================
  If you are looking to obtain OpenSSL, be sure to visit their official
  home page at:

    http://www.openssl.org/

  Be sure to download the non-engine version of OpenSSL; the engine
  release is OpenSSL with hardware SSL accelerator support.  It is
  presently in alpha stages (and even in the engine release, is disabled
  by default as a safety precaution).

  The present stable release of OpenSSL, as of the authoring of this
  document, is 0.9.6a.


OUTDATED OPENSSL
================
  OpenSSL 0.9.6 (or above) is **REQUIRED** for cryptlinks to work.

  The reason for this is that prior to OpenSSL 0.9.6, none of the
  encryption/decryption functions supported any form of error checking.
  The reasons for this are unknown, but the reasons behind not supporting
  0.9.5 or below should be self-explanatory at this point.

  To find out what OpenSSL version you have, try the following:

    $ openssl version
    OpenSSL 0.9.6 24 Sep 2000

  If you have installed OpenSSL into a directory structure which is not
  in your path (i.e. /usr/local/ssl/bin), please run the openssl binary
  via it's full pathname, such as:

    $ /usr/local/ssl/bin/openssl version
    OpenSSL 0.9.6 24 Sep 2000


MULTIPLE OPENSSL INSTALLATIONS
==============================
  Some systems may have multiple copies of OpenSSL installed for any of
  (but not limited to) the following reasons:

    1.  The OpenSSL which came with the system is outdated.
    2.  The OpenSSL which came with the system is broken.
    3.  The administrator wanted a more recent version.
    4.  Another software package automatically installed another copy
        of OpenSSL based upon dependencies.

  *******************************************************************
  **  HAVING MULTIPLE COPIES OF OpenSSL ON THE SAME SYSTEM IS NOT  **
  **           RECOMMENDED BY THE HYBRID DEVELOPMENT TEAM          **
  *******************************************************************

  If you are attempting to use hybrid-6 on a system where you do not
  have root access, it is recommended that you communicate with your
  system administrator or ISP (whichever the case may be) and request
  that a newer version of OpenSSL be installed.

  This disclaimer enforces the "clean system" concept.  Keeping a system
  up-to-date with software releases and fixes (vendor-specific or free-lance)
  is part of a system administrators job (professionally or socially).  It
  is not a tedious task if the application is small and generally compact
  (in comparison to, say, XFree86).

  In the case of FreeBSD, you may either rebuild world (make buildworld)
  or use the OpenSSL version provided in /usr/ports/security/openssl.

  If the above recommendations cannot be followed, hybrid-6 will permit
  you to specify where OpenSSL was installed.

  When using this method, it should be noted that the specified version
  will be used regardless of any other versions installed on the system.
  For example, let's assume a Linux machine has two (2) copies of OpenSSL
  installed:

    /usr/openssl         - Stock system install (0.9.5)
    /usr/local/ssl       - Additional install (0.9.6a)

  In this case, you would want to run "configure" as follows:

    ./configure --enable-openssl=/usr/local/ssl


OPENSSL ODDITIES
================
  The stock source-code release of OpenSSL is written to install itself,
  by default, in /usr/local/ssl.  This can be changed using the
  "--prefix" and "--openssldir" arguments of OpenSSL's "config" stage.

  The Hybrid team has verified the directory structure of stock OpenSSL
  installations.  Here are some examples of OpenSSL configurations, and
  how to get hybrid-6 to work with them:

    OpenSSL: ./config --prefix=/usr/local
    =====================================
      /usr/local
      /usr/local/bin
      /usr/local/include           <required by hybrid-6>
      /usr/local/include/openssl   <required by hybrid-6>
      /usr/local/lib               <required by hybrid-6>
      /usr/local/man
      /usr/local/ssl
      /usr/local/ssl/certs
      /usr/local/ssl/lib
      /usr/local/ssl/man
      /usr/local/ssl/misc
      /usr/local/ssl/openssl.cnf
      /usr/local/ssl/private
    =================================================
    hybrid-6: ./configure --enable-openssl=/usr/local


    OpenSSL: ./config --openssldir=/usr/local
    =========================================
      /usr/local
      /usr/local/bin
      /usr/local/include           <required by hybrid-6>
      /usr/local/include/openssl   <required by hybrid-6>
      /usr/local/lib               <required by hybrid-6>
      /usr/local/man
      /usr/local/certs
      /usr/local/misc
      /usr/local/openssl.cnf
      /usr/local/private
    =================================================
    hybrid-6: ./configure --enable-openssl=/usr/local


    OpenSSL: ./config --prefix=/usr/local --openssldir=/usr/local/ssl
    =================================================================
      /usr/local
      /usr/local/bin
      /usr/local/include           <required by hybrid-6>
      /usr/local/include/openssl   <required by hybrid-6>
      /usr/local/lib               <required by hybrid-6>
      /usr/local/ssl/certs
      /usr/local/ssl/lib
      /usr/local/ssl/man
      /usr/local/ssl/misc
      /usr/local/ssl/certs
      /usr/local/ssl/openssl.cnf
      /usr/local/ssl/private
    =================================================
    hybrid-6: ./configure --enable-openssl=/usr/local


  hybrid-6 will work with all of the above configurations.


ULTIMATUM
=========
  We recommend that administrators install OpenSSL using the "--openssldir"
  argument, rather than the "--prefix" argument.  The reason for this is
  purely cosmetical; it's nice to keep everything in one place, and keeps
  a clean directory tree.

  We also recommend against using "--openssldir=/usr/local", as shown
  in the above examples.  We recommend using /usr/local/ssl.

  Finally, please verify that your OpenSSL installation was installed
  properly, otherwise you will be unable to compile hybrid-6.

  Thanks for listening, and good night.


END OF DOCUMENT
